{"ast":null,"code":"// Imports\nimport React,{useState,useEffect}from\"react\";import Category from\"./Category.jsx\";import Zoom from\"@material-ui/core/Zoom\";import Fab from\"@material-ui/core/Fab\";import AddIcon from\"@material-ui/icons/Add\";// The Expense function returns the expense section of the website\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Expense(props){// Constants\nconst[isExpanded,setExpanded]=useState(false);const[categories,setCategories]=useState([]);const[isCategory,setIsCategory]=useState(true);const[exp,setExp]=useState({title:\"\",newTitle:\"\",amount:\"\",date:\"\",description:\"\"});useEffect(()=>{fetch(\"/api/categories\").then(res=>res.json()).then(data=>setCategories(data));},[]);// Nested functions\n// The handleChange function gets current input from form\nfunction handleChange(event){// Get user input\nconst{name,value,checked}=event.target;const dropdown=document.querySelector(\".dropdown\");// Determine if it's a new category\nif(name===\"btn\"){if(checked){dropdown.disabled=true;setIsCategory(false);}else{dropdown.disabled=false;setIsCategory(true);}}// return user input\nsetExp(prevExp=>{return{...prevExp,[name]:value};});}// The submitExp submits the info from the form to the expense array\nfunction submitExp(event){// Remove white space\nconst isWhitespaceString=str=>!str.replace(/\\s/g,'').length;console.log(exp);// If user filled in required fields\nif((exp.title!=\"\"||!isWhitespaceString(exp.newTitle))&&Number(exp.amount)!==0&&exp.date!==\"\"){// Add expense\nprops.onAdd(exp);// Reset text input\nsetExp({title:\"\",newTitle:\"\",amount:\"\",date:\"\",description:\"\"});setIsCategory(true);event.preventDefault();}// Else\nelse{// Alert user to enter required fields\nalert(\"Please enter required fields\");}}// The expand function sets isExpanded to true\nfunction expand(){setExpanded(true);}// Return expense section\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"section add-expense\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Add Expense\"}),/*#__PURE__*/_jsxs(\"form\",{children:[/*#__PURE__*/_jsx(\"select\",{className:\"dropdown\",name:\"title\",onClick:expand,onChange:handleChange,value:exp.title,children:categories.map((catItem,index)=>{return/*#__PURE__*/_jsx(Category,{name:catItem.name},index);})}),/*#__PURE__*/_jsx(\"input\",{name:\"btn\",type:\"checkbox\",onChange:handleChange}),!isCategory&&/*#__PURE__*/_jsx(\"input\",{name:\"newTitle\",type:\"text\",onClick:expand,placeholder:\"Expense Category\",onChange:handleChange,value:exp.newTitle,required:true}),/*#__PURE__*/_jsx(\"input\",{name:\"amount\",type:\"number\",onClick:expand,placeholder:\"Expense amount ($)\",onChange:handleChange,value:exp.amount,required:true}),/*#__PURE__*/_jsx(\"input\",{name:\"date\",type:\"date\",onClick:expand,placeholder:\"Date\",onChange:handleChange,value:exp.date,required:true}),isExpanded&&/*#__PURE__*/_jsx(\"textarea\",{name:\"description\",placeholder:\"Description of expense (optional)\",onChange:handleChange,value:exp.description,rows:3}),/*#__PURE__*/_jsx(Zoom,{in:isExpanded,children:/*#__PURE__*/_jsx(Fab,{onClick:submitExp,children:/*#__PURE__*/_jsx(AddIcon,{})})})]})]});}// Export function\nexport default Expense;","map":{"version":3,"names":["React","useState","useEffect","Category","Zoom","Fab","AddIcon","jsx","_jsx","jsxs","_jsxs","Expense","props","isExpanded","setExpanded","categories","setCategories","isCategory","setIsCategory","exp","setExp","title","newTitle","amount","date","description","fetch","then","res","json","data","handleChange","event","name","value","checked","target","dropdown","document","querySelector","disabled","prevExp","submitExp","isWhitespaceString","str","replace","length","console","log","Number","onAdd","preventDefault","alert","expand","className","children","onClick","onChange","map","catItem","index","type","placeholder","required","rows","in"],"sources":["/Users/alonsogarcia/Desktop/School/NAU/SUMMER 24/CS 312/website/public/cs312/CS-312-Project/frontend/src/components/Expense.jsx"],"sourcesContent":["// Imports\nimport React, { useState, useEffect } from \"react\";\nimport Category from \"./Category.jsx\";\nimport Zoom from \"@material-ui/core/Zoom\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\n\n\n// The Expense function returns the expense section of the website\nfunction Expense( props ) {\n\n\n\n  // Constants\n  const [ isExpanded, setExpanded ] = useState( false );\n  const [ categories, setCategories ] = useState([]);\n  const [ isCategory, setIsCategory ] = useState( true );\n  const [ exp, setExp ] = useState({\n    title: \"\",\n    newTitle: \"\",\n    amount: \"\",\n    date: \"\",\n    description: \"\"\n  });\n\n  useEffect( () => {\n    fetch( \"/api/categories\" )\n      .then( res => res.json() )\n      .then( data => setCategories( data ) );\n  }, [] );\n\n  // Nested functions\n\n    // The handleChange function gets current input from form\n    function handleChange( event ) {\n\n      // Get user input\n      const { name, value, checked } = event.target;\n      const dropdown = document.querySelector( \".dropdown\" )\n\n      // Determine if it's a new category\n      if ( name === \"btn\" ) {\n        if ( checked ) {\n          dropdown.disabled = true;\n          setIsCategory( false );\n        }\n        else {\n          dropdown.disabled = false;\n          setIsCategory( true );\n        }\n      }\n\n      // return user input\n      setExp( prevExp => {\n        return {\n          ...prevExp,\n          [ name ]: value\n        };\n      });\n    }\n\n    // The submitExp submits the info from the form to the expense array\n    function submitExp( event ) {\n\n      // Remove white space\n      const isWhitespaceString = str => !str.replace(/\\s/g, '').length\n\n      console.log( exp );\n\n      // If user filled in required fields\n      if ( ( exp.title != \"\" || !isWhitespaceString( exp.newTitle ) ) && Number( exp.amount ) !== 0\n             && exp.date !== \"\" ) {\n\n        // Add expense\n        props.onAdd( exp );\n\n        // Reset text input\n        setExp({\n          title: \"\",\n          newTitle: \"\",\n          amount: \"\",\n          date: \"\",\n          description: \"\"\n        });\n        setIsCategory( true );\n        event.preventDefault();\n      }\n\n      // Else\n      else {\n\n        // Alert user to enter required fields\n        alert( \"Please enter required fields\" );\n      }\n    }\n\n    // The expand function sets isExpanded to true\n    function expand() {\n      setExpanded( true );\n    }\n\n  // Return expense section\n  return (\n    <div className=\"section add-expense\">\n        <h3>Add Expense</h3>\n        <form>\n          <select\n            className=\"dropdown\"\n            name=\"title\"\n            onClick = { expand }\n            onChange={ handleChange }\n            value={ exp.title }\n          >\n            { categories.map( ( catItem, index ) => {\n              return (\n                <Category\n                  key={ index }\n                  name={ catItem.name }\n                />\n              );\n            })}\n          </select>\n          <input\n            name=\"btn\"\n            type=\"checkbox\"\n            onChange={ handleChange }\n          />\n          { !isCategory && (\n          <input\n            name=\"newTitle\"\n            type=\"text\"\n            onClick={ expand }\n            placeholder=\"Expense Category\"\n            onChange={ handleChange }\n            value={ exp.newTitle }\n            required\n          />\n          )}\n          <input\n            name=\"amount\"\n            type=\"number\"\n            onClick={ expand }\n            placeholder=\"Expense amount ($)\"\n            onChange={ handleChange }\n            value={ exp.amount }\n            required\n          />\n          <input\n            name=\"date\"\n            type=\"date\"\n            onClick = { expand }\n            placeholder=\"Date\"\n            onChange={ handleChange }\n            value={ exp.date }\n            required\n          />\n          { isExpanded && (\n          <textarea\n            name=\"description\"\n            placeholder=\"Description of expense (optional)\"\n            onChange={ handleChange }\n            value={ exp.description }\n            rows={ 3 }\n          />)}\n\n          <Zoom in={ isExpanded }>\n            <Fab onClick={ submitExp }>\n              <AddIcon />\n            </Fab>\n          </Zoom>\n        </form>\n    </div>\n  );\n}\n\n\n\n// Export function\nexport default Expense;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}